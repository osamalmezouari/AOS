datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Personel {
  id                String               @id
  matricule         Int                  @unique
  createAt          DateTime             @default(now())
  dateRepense       DateTime?
  nom_fr            String               @unique
  nom_ar            String
  prenom_ar         String
  prenom_fr         String
  naissance         String
  email             String               @unique
  echelle           Int
  adherant          Boolean?             @default(false)
  isAdmin           Boolean?             @default(false)
  /// Relation to Affectation
  Affectation       Affectation          @relation(fields: [AffectationId], references: [id])
  AffectationId     String
  /// Relation to demande estivage
  demandeEstivage   DemandeEstivage[]
  demandeCredit     demandeCredit[]
  demandePelerinage demandePelerinage[]
  retrait           retrait[]
  demamdeMaladies   demamdeMaladies[]
  demandeLang       demandeLang[]
  condoleance       demandeCondoleance[]
  Zoo               Zoo[]
  // demandeExcursion  demandeExcursion[]
  demandeExcursion  demandeExcursion[]
  mariage           mariage[]
  inscreption       inscreption[]
}

model Affectation {
  id            String     @id
  structureAr   String     @unique
  StructureFr   String     @unique
  abrviation    String
  TypeStructure String
  /// Relation to Personel
  personel      Personel[]
}

model Activitie {
  id             String         @id
  nomAr          String
  nomFr          String
  ///Relation to sousActivites
  SousActivities SousActivite[]

  @@unique([nomFr, nomAr])
}

model SousActivite {
  id                String                   @id
  nomAr             String
  nomFr             String
  descriptionAr     String
  descriptionFr     String
  /// Relation activite
  activite          Activitie                @relation(fields: [activiteId], references: [id])
  activiteId        String
  ///Relation dotation
  pieces            SousActivitiesOnPieces[]
  dotation          Dotation[]
  demandeEsstivage  DemandeEstivage[]
  demandeCredit     demandeCredit[]
  demandePelerinage demandePelerinage[]
  retrait           retrait[]
  demamdeMaladies   demamdeMaladies[]
  demandeLang       demandeLang[]
  condoleance       demandeCondoleance[]
  Zoo               Zoo[]
  demandeExcursion  demandeExcursion[]
  inscreption       inscreption[]

  @@unique([nomFr, nomAr, descriptionAr, descriptionFr])
}

model SousActivitiesOnPieces {
  sousActivite   SousActivite @relation(fields: [sousActiviteId], references: [id])
  sousActiviteId String
  piece          Pieces       @relation(fields: [pieceId], references: [id])
  pieceId        String

  @@id([sousActiviteId, pieceId])
}

model Pieces {
  id             String                   @id
  nomAr          String
  nomFr          String
  ///Relation to sousActivites
  SousActivities SousActivitiesOnPieces[]

  @@unique([nomAr, nomFr])
}

model Dotation {
  id              String       @id
  dotation        Float
  descriptionAr   String       @unique
  descriptionFr   String       @unique
  /// Relation to sousActivites
  SousActivities  SousActivite @relation(fields: [SousActivitieId], references: [id])
  SousActivitieId String

  @@unique([descriptionAr, descriptionFr])
}

model DemandeEstivage {
  id             String       @id
  date_entre     BigInt
  date_sortie    BigInt
  Status         String?
  effet          DateTime     @default(now())
  appartementId  String?
  /// Relation to centres
  centre         Centre       @relation(fields: [centreId], references: [id])
  centreId       String
  /// Relation to Personel
  personel       Personel     @relation(fields: [personelId], references: [id])
  personelId     String
  /// Relation to relation
  sousActivite   SousActivite @relation(fields: [sousActiviteId], references: [id])
  sousActiviteId String
}

model Centre {
  id       String @id
  centreAr String
  centreFr String

  /// Relation to demamnde estivage
  demandeEstivage DemandeEstivage[]
  /// Relation to ville
  Vile            Vile              @relation(fields: [vileId], references: [id])
  vileId          String
  /// Relation to typeEsstivage
  TypeEstivage    TypeEsstivage     @relation(fields: [TypeEstivageId], references: [id])
  TypeEstivageId  String
  /// Relation to Appartements
  appartements    Appartement[]
}

model Appartement {
  id       String @id
  numero   Int
  /// Relation to centers
  centre   Centre @relation(fields: [centreId], references: [id])
  centreId String
}

model TypeEsstivage {
  id     String   @id
  type   String
  /// Relation to centers
  centre Centre[]
}

model demandeCredit {
  id            String   @id
  mantantCredit Decimal
  description   String
  Status        String?
  effet         DateTime @default(now())
  observation   String?

  ///relation to Personel
  Personel   Personel @relation(fields: [personelId], references: [id])
  personelId String

  ///relation to Personel
  SousActivite   SousActivite @relation(fields: [sousActiviteId], references: [id])
  sousActiviteId String
}

model demandePelerinage {
  id          String   @id
  annee       BigInt
  effet       DateTime @default(now())
  observation String?
  Status      String?
  ///relation to Personel
  Personel    Personel @relation(fields: [personelId], references: [id])
  personelId  String

  ///relation to Personel
  SousActivite   SousActivite @relation(fields: [sousActiviteId], references: [id])
  sousActiviteId String
}

model retrait {
  id              String   @id
  date            String
  mantantRetraite Int
  Status          String?
  effet           DateTime @default(now())
  observation     String?

  ///relation to Personel
  Personel   Personel @relation(fields: [personelId], references: [id])
  personelId String

  ///relation to Personel
  SousActivite   SousActivite @relation(fields: [sousActiviteId], references: [id])
  sousActiviteId String
}

model demamdeMaladies {
  id                String   @id
  mantantMaladie    BigInt
  MaladieDecription String
  Status            String?
  effet             DateTime @default(now())
  observation       String?
  ///relation to Personel
  Personel          Personel @relation(fields: [personelId], references: [id])
  personelId        String

  ///relation to Personel
  SousActivite   SousActivite @relation(fields: [sousActiviteId], references: [id])
  sousActiviteId String
}

model demandeLang {
  id             String       @id
  effet          DateTime     @default(now())
  Status         String?
  observation    String?
  /// relation to CentresLang
  CentreLang     CentresLang  @relation(fields: [CentreLangId], references: [id])
  CentreLangId   String
  /// relation to Personel
  Personel       Personel     @relation(fields: [personelId], references: [id])
  personelId     String
  /// relation to Personel
  SousActivite   SousActivite @relation(fields: [sousActiviteId], references: [id])
  sousActiviteId String
}

model CentresLang {
  id          String        @id
  nom         String
  demandeLang demandeLang[]
}

model demandeCondoleance {
  id                 String          @id
  mantantCondoleance Int
  description        String
  Status             String?
  effet              DateTime        @default(now())
  observation        String?
  ///relation to condoleance
  typeCondoleance    typeCondoleance @relation(fields: [typeCondoleanceId], references: [id])
  typeCondoleanceId  String
  /// relation to Personel
  Personel           Personel        @relation(fields: [personelId], references: [id])
  personelId         String
  /// relation to Personel
  SousActivite       SousActivite    @relation(fields: [sousActiviteId], references: [id])
  sousActiviteId     String
}

model typeCondoleance {
  id          String               @id
  nom         String
  condoleance demandeCondoleance[]
}

model Zoo {
  id          String   @id
  date        BigInt
  adulte      Int
  enfant      Int
  Status      String?
  effet       DateTime @default(now())
  observation String?
  ///relation to Personel
  Personel    Personel @relation(fields: [personelId], references: [id])
  personelId  String

  ///relation to Personel
  SousActivite   SousActivite @relation(fields: [sousActiviteId], references: [id])
  sousActiviteId String
}

model mariage {
  id          String   @id
  description String
  effet       BigInt
  Status      String?
  Personel    Personel @relation(fields: [personelId], references: [id])
  personelId  String
  Mantant     String?
  Observation String
}

model demandeExcursion {
  id               String       @id
  Date             BigInt
  Status           String?
  effet            DateTime     @default(now())
  observation      String?
  ///relation to details Excursion
  detailsExcursion Excursion?   @relation(fields: [ExcursionId], references: [id])
  ExcursionId      String
  /// relation to Personel
  Personel         Personel     @relation(fields: [personelId], references: [id])
  personelId       String
  /// relation to Personel
  SousActivite     SousActivite @relation(fields: [sousActiviteId], references: [id])
  sousActiviteId   String
}

model Vile {
  id             String      @id
  vileAr         String
  vileFr         String
  // Relation to centers
  centres        Centre[]
  excursionsFrom Excursion[] @relation("excursionsFromVile")
  excursionsTo   Excursion[] @relation("excursionsToVile")

  @@unique([vileAr, vileFr])
}

model Excursion {
  id               String             @id
  Excursion        String
  Description      String
  Date             BigInt
  startVile        Vile               @relation("excursionsFromVile", fields: [vileStartId], references: [id])
  vileStartId      String
  endVile          Vile               @relation("excursionsToVile", fields: [vileEndId], references: [id])
  vileEndId        String
  demandeExcursion demandeExcursion[]
}

model inscreption {
  id              String       @id
  annee           BigInt
  effet           DateTime     @default(now())
  // relation with personel
  Personel        Personel     @relation(fields: [personelId], references: [id])
  personelId      String
  // relation with SousActivitie
  SousActivitie   SousActivite @relation(fields: [SousActivitieId], references: [id])
  SousActivitieId String
}
